steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'docker'
    args: ['build', '-t',
           'us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/awsbe:${SHORT_SHA}', '.']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'docker'
    args: ['push',  'us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/awsbe:${SHORT_SHA}']

  # custom build steps https://cloud.google.com/build/docs/configuring-builds/use-community-and-custom-builders
  # prepare deploy.yaml file
  - name: 'gcr.io/${PROJECT_ID}/envsubst'
    args: ["deploy.yaml"]
    env:
      - 'PROJECT_ID=${PROJECT_ID}'
      - '_ARTIFACT_REGISTRY_REPO=${_ARTIFACT_REGISTRY_REPO}'
      - 'SHORT_SHA=${SHORT_SHA}'

  # get k8s config
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['container', 'clusters', 'get-credentials', 'cluster-1', '--zone', 'us-central1-c', '--project', 'zippy-parity-381314']

  # run deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'kubectl'
    args: ['apply', '-f', 'deploy.yaml']


options:
 logging: CLOUD_LOGGING_ONLY